/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectopsp;

import proyectopsp.NuevasClasesCompartidas.Personaje;
import proyectopsp.NuevasClasesCompartidas.ObjetoCompartido;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author jose_
 */
public final class Cliente extends javax.swing.JFrame {

    Personaje personaje;
    int id = 0;
    ObjectOutputStream outObjeto;
    ObjectInputStream inObjeto;
    Socket cliente;
    ObjetoCompartido panel;
    int fuerza = 0;

    /**
     * Creates new form Cliente
     *
     * @param host
     * @param puerto
     * @param p
     * @throws java.io.IOException
     * @throws java.lang.ClassNotFoundException
     */
    public Cliente(String host, int puerto, Personaje p) throws IOException, ClassNotFoundException {
        initComponents();
        personaje = p;
        if ("".equals(host)) {
            host = "localhost";
        }

        //puerto remoto 
        System.out.println("PROGRAMA CLIENTE INICIADO....");
        //Me conecto con el Servidor
        cliente = new Socket(host, puerto);

        //le paso un objeto, en este caso el personaje que yo he seleccionado
        outObjeto = new ObjectOutputStream(cliente.getOutputStream());
        outObjeto.writeObject(p);
        esperarpanel();

        //Creo un hilo para que suba la barra de ataque especial
        subeEspecial();
        specialJ1.setMaximum(50);
        specialJ2.setMaximum(50);

    }

    public void esperarpanel() {
        new Thread(() -> {
            while (panel == null) {
                ObtenerPanelDelServidor();
            }

            while (panel.getJugador1() == null || panel.getJugador2() == null) {
                ObtenerPanelDelServidor();
            }
            //Le pongo el id a cada jugador segun la fuerza de su personaje 
            //(la idea es que dos personajes no escojan el mismo jugador)
            //Esta asignacion de ID siempre la hará en el primer turno
            if (panel.getJugador1().getFuerza() == personaje.getFuerza()) {
                id = 1;
                setTitle("Jugador" + id);
                vidaJ1.setMaximum(panel.getJugador1().getVida());

            } else {
                id = 2;
                setTitle("Jugador" + id);
                vidaJ2.setMaximum(panel.getJugador2().getVida());
            }
            ResfrescarPanel();
            HiloRefrescarVentana refrescar = new HiloRefrescarVentana(this);
            refrescar.start();

        }).start();

    }

    public void ObtenerPanelDelServidor() {

        try {
            inObjeto = new ObjectInputStream(cliente.getInputStream());

            //Obtengo el objeto compartido
            panel = (ObjetoCompartido) inObjeto.readObject();//recibo objeto 

            if (panel != null) {

                System.out.println("NO ES NULO EL PANEL");

                if (panel.getJugador1() == null) {
                    System.out.println("es nulo el P1");
                }
                if (panel.getJugador2() == null) {
                    System.out.println("es nulo el P2");
                }

            }

        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        atacar_btn = new javax.swing.JButton();
        especial_btn = new javax.swing.JButton();
        esquivar_btn = new javax.swing.JButton();
        Escenario = new javax.swing.JPanel();
        Personaje1 = new javax.swing.JLabel();
        Personaje2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        specialJ1 = new javax.swing.JProgressBar();
        specialJ2 = new javax.swing.JProgressBar();
        vidaJ1 = new javax.swing.JProgressBar();
        vidaJ2 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        atacar_btn.setText("ATACAR");
        atacar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atacar_btnActionPerformed(evt);
            }
        });

        especial_btn.setText("EPECIAL");
        especial_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                especial_btnActionPerformed(evt);
            }
        });

        esquivar_btn.setText("ESQUIVAR");
        esquivar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esquivar_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(esquivar_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(atacar_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(especial_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atacar_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(esquivar_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(especial_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(vidaJ2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(specialJ2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(specialJ1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(vidaJ1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(vidaJ2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vidaJ1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(specialJ1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(specialJ2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel1.setText("JUGADOR 1");

        jLabel2.setText("JUGADOR 2");

        javax.swing.GroupLayout EscenarioLayout = new javax.swing.GroupLayout(Escenario);
        Escenario.setLayout(EscenarioLayout);
        EscenarioLayout.setHorizontalGroup(
            EscenarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EscenarioLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(Personaje2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(Personaje1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EscenarioLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(119, 119, 119))
        );
        EscenarioLayout.setVerticalGroup(
            EscenarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EscenarioLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(EscenarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EscenarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EscenarioLayout.createSequentialGroup()
                        .addComponent(Personaje1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(EscenarioLayout.createSequentialGroup()
                        .addComponent(Personaje2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Escenario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Escenario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void atacar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atacar_btnActionPerformed

        Atacar((int) (personaje.getFuerza()));
        try {
            EnviarDatos();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_atacar_btnActionPerformed

    private void especial_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_especial_btnActionPerformed
        ActualizarEspecial();
        Atacar((int) (personaje.getFuerza() * 1.5));
        try {
            EnviarDatos();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_especial_btnActionPerformed

    private void esquivar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esquivar_btnActionPerformed
        Esquivar();
    }//GEN-LAST:event_esquivar_btnActionPerformed

    public void Atacar(int fuerza) {
        switch (id) {
            case 1:
                this.fuerza = fuerza;
                break;
            case 2:

                this.fuerza = fuerza;
                break;
        }
    }

    public void Esquivar() {
        //Cambiar icono del personaje

        esquivar_btn.setEnabled(false);
        new Thread(() -> {
            personaje.setEsquivando(true);
            try {
                EnviarDatos();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
            }

            personaje.setEsquivando(false);
            esquivar_btn.setEnabled(true);
            //Cambiar icono del personaje
            try {
                EnviarDatos();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }).start();

    }

    //cambia la vida del progress, no del personaje
    public void ActualizarVida() {
        switch (id) {
            case 1:

                panel.getJugador1().quitarVida(panel.getFuerzaAtaqueJ2());
                //panel.getJugador1().quitarVida(10);
                System.out.println("ATAQUE recibido:" + panel.getFuerzaAtaqueJ2());
                vidaJ1.setValue(panel.getJugador1().getVida());
                vidaJ2.setValue(panel.getJugador2().getVida());

                break;
            case 2:

                panel.getJugador2().quitarVida(panel.getFuerzaAtaqueJ1());
                System.out.println("ATAQUE recibido:" + panel.getFuerzaAtaqueJ1());
                vidaJ2.setValue(panel.getJugador2().getVida());

                if (panel.getJugador1() == null) {
                    System.out.println("ES NULO EL PERSONAJE 1 :C");
                } else {
                    vidaJ1.setValue(panel.getJugador1().getVida());
                }

                break;
        }

    }

    public void ActualizarEspecial() {
        switch (id) {
            case 1:
                specialJ1.setValue(0);
                break;
            case 2:
                specialJ2.setValue(0);

                break;
        }

    }

    public void subeEspecial() {

        //Veo si mi especial está al 100% para poner el boton enabled, si no lo está se pone como disabled
        new Thread(() -> {
            while (true) {

                if (id == 1 && specialJ1.getValue() >= 50 || id == 2 && specialJ2.getValue() >= 50) {

                    especial_btn.setEnabled(true);
                } else {
                    especial_btn.setEnabled(false);

                }

                //Cada dos segundos le subo el especial ambos en mi panel para verlo ya que no quiero
                //Que cada segundo me tengan que enviar los datos del panel.
                try {
                    Thread.sleep(200);
                    specialJ1.setValue(specialJ1.getValue() + 1);
                    specialJ2.setValue(specialJ2.getValue() + 1);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }).start();
    }

    //Asigno los datos recibidos a mi panel
    public void ResfrescarPanel() {

        if (panel != null) {
            System.out.println("He refrescado el panel");
            ActualizarVida();
            Personaje1.setIcon(new ImageIcon(panel.getPersonaje1()));
            Personaje2.setIcon(new ImageIcon(panel.getPersonaje2()));
            specialJ1.setValue(panel.getSpecialJ1());
            specialJ2.setValue(panel.getSpecialJ2());

        }

    }

    public void EnviarDatos() throws ClassNotFoundException {

        //Envio los datos de mi panel al servidor
        try {
            outObjeto = new ObjectOutputStream(cliente.getOutputStream());

            switch (id) {
                case 1:
                    panel.setPersonaje1(Personaje1.getIcon().toString());
                    panel.setSpecialJ1(specialJ1.getValue());
                    panel.setFuerzaAtaqueJ1(fuerza);
                    System.out.println("ATAQUE ENVIADO:" + fuerza);
                    break;
                case 2:
                    panel.setPersonaje2(Personaje2.getIcon().toString());
                    panel.setSpecialJ2(specialJ2.getValue());
                    panel.setFuerzaAtaqueJ2(fuerza);
                    System.out.println("ATAQUE ENVIADO:" + fuerza);

                    break;
            }

            outObjeto.writeObject(panel);
            System.out.println("CLIENTE:vida del j1 " + panel.getJugador1().getVida() + " vida del j2 " + panel.getJugador2().getVida());

        } catch (IOException ex) {
            System.out.println(ex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Escenario;
    private javax.swing.JLabel Personaje1;
    private javax.swing.JLabel Personaje2;
    private javax.swing.JButton atacar_btn;
    private javax.swing.JButton especial_btn;
    private javax.swing.JButton esquivar_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JProgressBar specialJ1;
    private javax.swing.JProgressBar specialJ2;
    private javax.swing.JProgressBar vidaJ1;
    private javax.swing.JProgressBar vidaJ2;
    // End of variables declaration//GEN-END:variables
}
